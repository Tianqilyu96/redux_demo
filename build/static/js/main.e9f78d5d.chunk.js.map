{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.js","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","CountUI","incrementNum","value","selectedNum","props","decrementNum","decrement","oddIncrement","count","incrementAsync","this","length","ref","c","onClick","Component","connect","state","person","time","dispatch","setTimeout","Person","addPerson","name","nameInput","age","ageInput","id","nanoid","add","placeholder","map","el","App","Count","initState","combineReducers","preState","action","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e9f78d5d.chunk.js","sourcesContent":["//定义action中type的常量值 便于管理，防止单词写错\nexport const INCREMENT = 'increment'\nexport const DECREMENT =  'decrement'\nexport const ADD_PERSON = 'addperson'","import { INCREMENT, DECREMENT } from \"../constant\";\n//为count组件生成action对象\nexport const increment = (data) => ({ type: INCREMENT, data });\n\nexport const decrement = (data) => ({ type: DECREMENT, data });\n\n//Async action就是指返回一个action function而不是actiion object\n//会接收到store调用的dispatch\nexport const incrementAsync = (data,time) =>{\n    return (dispatch)=>{\n        setTimeout(()=>{\n            dispatch(increment(data))\n        },time)\n    }\n}\n","//生成container components\nimport React, { Component } from \"react\";\n//引入connnect用于连接UI和redux\nimport { connect } from \"react-redux\";\n//引入action-creator\nimport {\n  increment,\n  decrement,\n  incrementAsync,\n} from \"../../redux/actions/count\";\n\nclass CountUI extends Component {\n  //在挂载之后再检测\n  // componentDidMount(){\n  //     //检测redux状态变化，只要变化就调用render\n  //     //只要redux里任何状态改变 都会调用suscribe\n  //     store.subscribe(()=>{\n  //         this.setState({});\n  //     })\n  // }\n\n  incrementNum = () => {\n    const { value } = this.selectedNum;\n    this.props.increment(value * 1);\n  };\n\n  decrementNum = () => {\n    const { value } = this.selectedNum;\n    this.props.decrement(value * 1);\n  };\n\n  oddIncrement = () => {\n    const { value } = this.selectedNum;\n    if (this.props.count % 2 !== 0) {\n      this.props.increment(value * 1);\n    }\n  };\n\n  incrementAsync = () => {\n    const { value } = this.selectedNum;\n    this.props.incrementAsync(value * 1, 1000);\n  };\n\n  render() {\n    return (\n      <div>\n        {/* getstate会调用reducer */}\n        <h2>Result is : {this.props.count}</h2>\n        <h2>List length is: {this.props.length}</h2>\n        <select ref={(c) => (this.selectedNum = c)}>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n        </select>\n        <button onClick={this.incrementNum}>+</button>\n        <button onClick={this.decrementNum}>-</button>\n        <button onClick={this.oddIncrement}>increment if odd</button>\n        <button onClick={this.incrementAsync}>increment async</button>\n      </div>\n    );\n  }\n}\n\n\n\n//将state传递给UI component\n// const mapStateToProps = (state) => {\n//   return { count: state };\n// };\n\n//将actions传递给UI\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: (number) => dispatch(createIncrement(number)),\n//     decrement: (number) => dispatch(createDecrement(number)),\n//     incrementasync: (number, time) =>\n//       dispatch(createIncrementAsync(number, time)),\n//   };\n// };\n\n//使用connect创建并export一个container component\nexport default connect(\n  (state) => ({ count: state.count, length: state.person.length }),\n//mapDispatchToProps一般写法\n//   (dispatch) => ({\n//     increment: (number) => dispatch(createIncrement(number)),\n//     decrement: (number) => dispatch(createDecrement(number)),\n//     incrementasync: (number, time) =>\n//       dispatch(createIncrementAsync(number, time)),\n//   })\n\n//精简写法 react-redux会自动dispatch\n{\n    increment,\n    decrement,\n    incrementAsync,\n}\n\n)(CountUI);\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { connect } from \"react-redux\";\nimport { addPerson } from \"../../redux/actions/person\";\n\n\nclass Person extends Component {\n  addPerson = () => {\n    const name = this.nameInput.value;\n    const age = this.ageInput.value;\n    const person = { id: nanoid(), name, age };\n    this.props.add(person);\n    this.nameInput = \"\";\n    this.ageInput = \"\";\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Person Component</h2>\n        <h2>Count is :{this.props.count}</h2>\n        <input ref={(c) => (this.nameInput = c)} placeholder=\"type your name\" />\n        <input ref={(c) => (this.ageInput = c)} placeholder=\"type your age\" />\n        <button onClick={this.addPerson}>ADD</button>\n        <ul>\n          {this.props.person.map((el) => {\n            return (\n              <li key={el.id}>\n                Name: {el.name}, Age: {el.age}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ person: state.person, count: state.count }), {\n  add: addPerson,\n})(Person);\n","import {ADD_PERSON} from '../constant'\n\n//creact addperson action \nexport const addPerson =(data)=>{\n    return ({type: ADD_PERSON,data})\n}","import React, { Component } from 'react'\nimport Count from './containers/Count'\nimport Person from './containers/Person'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Count />\n        <hr/>\n        <Person />\n      </div>\n    )\n  }\n}\n\n","import { ADD_PERSON } from \"../constant\";\n\n//在reducer初始化状态-person array\nconst initState = [];\n\nexport default function personReducer(preState = initState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case ADD_PERSON:\n      return [data, ...preState];\n    default:\n      return preState;\n  }\n}\n","//引入reduer\nimport { combineReducers } from \"redux\";\nimport count from \"./count\";\nimport person from \"./person\";\n\n//合并reducers, 命名states\nexport default combineReducers({\n  count,\n  person,\n});\n","import { INCREMENT, DECREMENT } from \"../constant\";\nconst initState = 0;\n\nexport default function countReducer(preState = initState, action) {\n  const { type, data } = action;\n\n  switch (type) {\n    case INCREMENT:\n      return preState + data;\n    case DECREMENT:\n      return preState - data;\n    default:\n      return preState;\n  }\n}\n","//该文件专门用于暴露store对象，整个app只有一个Store obj\n//引入创建Store方法\nimport { createStore, applyMiddleware } from \"redux\";\n\n//引入thunk中间件 让redux识别function action 异步action需要\nimport thunk from \"redux-thunk\";\n//引入devtool extention\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducers from \"./reducers\";\n\n// create Store Object,bind reducers\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n//provider会自动传store给container组件，不需要写很多遍 store={store}\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n//react-redux不需要这段，他会自动检测\n//subscribe写在最外边，每次更新都会render\n// store.subscribe(()=>{ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );})\n"],"sourceRoot":""}